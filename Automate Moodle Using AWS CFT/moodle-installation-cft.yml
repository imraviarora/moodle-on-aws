AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
    ConstraintDescription: must be development or production      
  InstanceType: 
    Description: Select the ec2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
  KeyName:
    Description: Key name to SSH to VM's. 
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone:
    Description: select the availability zone
    Type: String
    Default: us-east-1a
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c


Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Instance Configuration"    
        Parameters:
          - InstanceType
          - KeyName
          - AvailabilityZone  
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - EnvironmentName  
    ParameterLabels:
      EnvironmentName:
        default: "Which environment we are planning to create this instance?"
      KeyName:
        default: "Be aware that once keyname is selected we cannot change it unless instance replaced"

Resources:
  MoodleSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with port 22, 443 and 80 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          Description: "Allow HTTP traffic"
          CidrIp: 0.0.0.0/0
        - IpProtocol: "tcp"
          FromPort: '443'
          ToPort: '443'
          Description: "Allow HTTPS traffic"
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-sg"
 
  MoodleVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06640050dc3f556bb
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      SecurityGroups:
        - !Ref MoodleSecurityGroup
      UserData: 
        Fn::Base64: |  
          #!/bin/bash
          sudo su
          yum module install php:7.2 -y
          systemctl enable --now php-fpm
          systemctl status php-fpm
          yum install mysql mysql-server wget unzip httpd php-mysqli php-zip php-gd php-intl php-xmlrpc php-soap -y
          systemctl enable --now mysqld.service
          systemctl status mysqld.service
          systemctl status httpd
          systemctl start httpd
          mysql -u root -e "create database moodle;"
          mysql -u root -e "show databases;"
          wget https://download.moodle.org/stable310/moodle-3.10.zip
          chmod 777 /var/www/
          unzip moodle-3.10.zip -d /var/www/html/
          setenforce 0
          systemctl reload httpd
          dnf install mod_ssl -y
          systemctl restart httpd
          apachectl -M | grep ssl
          sed -i 's+#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt+SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt+g' /etc/httpd/conf.d/ssl.conf
          systemctl reload httpd

      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ec2"
    
  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties: 
      InstanceId: !Ref MoodleVMInstance

      
Outputs:
  MoodleURL:
    Description: Moodle Access URL
    Value: !Sub 'http://${MoodleVMInstance.PublicDnsName}/moodle'